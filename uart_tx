module uart_tx (
    input wire clk,
    input wire reset,
    input wire [7:0] data,
    input wire send,
    output wire tx,
    output reg ready
);

    parameter CLK_FREQ = 50000000;  // 50 MHz
    parameter BAUD_RATE = 9600;
    localparam BAUD_PERIOD = CLK_FREQ / BAUD_RATE;
    
    reg [15:0] baud_counter;
    reg [3:0] bit_index;
    reg [9:0] tx_shift;
    
    always @(posedge clk or posedge reset) begin
        if (reset) begin
            baud_counter <= 0;
            bit_index <= 0;
            tx_shift <= 10'b1111111111;
            ready <= 1;
        end else if (send && ready) begin
            tx_shift <= {1'b1, data, 1'b0};  // Start bit, data, stop bit
            bit_index <= 0;
            ready <= 0;
        end else if (!ready) begin
            if (baud_counter == BAUD_PERIOD - 1) begin
                baud_counter <= 0;
                bit_index <= bit_index + 1;
                if (bit_index == 9) begin
                    ready <= 1;
                end else begin
                    tx_shift <= {1'b1, tx_shift[9:1]};
                end
            end else begin
                baud_counter <= baud_counter + 1;
            end
        end
    end
    
    assign tx = tx_shift[0];

endmodule
